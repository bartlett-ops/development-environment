- name: Install RPM Fusion
  become: true
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: present
    disable_gpg_check: true
  loop:
    - "https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-42.noarch.rpm"
    - "https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-42.noarch.rpm"

- name: Enable fedora-cisco-openh264 repository
  become: true
  ansible.builtin.yum_repository:
    name: fedora-cisco-openh264
    metalink: "https://mirrors.fedoraproject.org/metalink?repo=fedora-cisco-openh264-$releasever&arch=$basearch"
    description: "Fedora $releasever openh264 (From Cisco) - $basearch"
    gpgkey: "file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-$releasever-$basearch"

- name: Install dnf plugins
  become: true
  ansible.builtin.package:
    name: dnf-plugins-core

- name: Add Docker CE repository for Fedora
  become: true
  ansible.builtin.command: 
    cmd: dnf-3 config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
    creates: /etc/yum.repos.d/docker-ce.repo

- name: Install packages
  become: true
  ansible.builtin.package:
    name: "{{ item }}"
  loop: "{{ packages }}"

- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ ansible_user_uid }}"
    group: "{{ ansible_user_gid }}"
    mode: "0755"
    state: directory
  loop: "{{ directories }}"
    
- name: Clone linux-scripts
  ansible.builtin.git:
    repo: git@github.com:bartlettt/linux-scripts.git
    dest: ~/code/linux-scripts
    version: master
    update: false

- name: Check for kubectl
  ansible.builtin.stat:
    path: ~/.local/bin/kubectl
  register: kubectl_file

- name: Install Kubernetes Binary Manager
  when: not kubectl_file.stat.exists
  block:
    - name: Create tmp directory
      ansible.builtin.file:
        path: /tmp/kubernetes-binaries-managers
        owner: "{{ ansible_user_uid }}"
        group: "{{ ansible_user_gid }}"
        mode: "0755"
        state: directory
    - name: Download Kubernetes Binary Manager archive
      ansible.builtin.unarchive:
        src: "https://github.com/little-angry-clouds/kubernetes-binaries-managers/releases/download/v1.0.0/kubernetes-binaries-managers_1.0.0_linux_amd64.tar.gz"
        dest: /tmp/kubernetes-binaries-managers
        remote_src: true
    - name: Copy files
      ansible.builtin.copy:
        src: "/tmp/kubernetes-binaries-managers/{{ item.src }}"
        dest: "~/.local/bin/{{ item.dest | default( item.src | basename ) }}"
        owner: "{{ ansible_user_uid }}"
        group: "{{ ansible_user_gid }}"
        mode: "0755"
        remote_src: true
      loop:
        - src: kubectl-linux-amd64/kbenv
        - src: kubectl-linux-amd64/kubectl-wrapper
          dest: kubectl
        - src: helm-linux-amd64/helmenv
        - src: helm-linux-amd64/helm-wrapper
          dest: helm 

- name: Clone tfenv
  ansible.builtin.git:
    repo: "https://github.com/tfutils/tfenv.git"
    dest: ~/.tfenv
    version: v3.0.0
    update: false

- name: Install pyenv
  block:
    - name: Clone pyenv
      ansible.builtin.git:
        repo: "https://github.com/pyenv/pyenv.git"
        dest: ~/.pyenv
        version: v2.6.11
        update: false
    - name: Compile pyenv
      ansible.builtin.shell:
        chdir: ~/.pyenv
        cmd: src/configure && make -C src
        creates: ~/.pyenv/src/realpath.o

- name: Check if awscli installed
  ansible.builtin.stat:
    path: /usr/local/sbin/aws
  register: awscli_file

- name: Install awscli
  when: not awscli_file.stat.exists
  block:
    - name: Create directory
      ansible.builtin.file:
        path: /tmp/awscli
        owner: "{{ ansible_user_uid }}"
        group: "{{ ansible_user_gid }}"
        mode: 0755
        state: directory
    - name: Download zip
      ansible.builtin.unarchive:
        src: "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
        dest: /tmp/awscli
        remote_src: true
    - name: Install AWS CLI
      become: true
      ansible.builtin.shell:
        chdir: /tmp/awscli
        cmd: ./aws/install

